pipeline {
    agent any

    environment {
        DOCKER_IMAGE = 'mon-image-docker:latest'  // Image Docker  construire
        DEPLOY_SERVER = 'user@serveur-test.com'  // Serveur de test o dployer
        DEPLOY_PATH = '/path/to/deploy'
    }
stages {
        stage('Cloner le dpt Git') {
            steps {
               git url: 'https://github.com/Steib-Audy-Victoria/Job_Clonage_Git.git', branch: 'main'
            }
        }
        stage('Excuter des tests unitaires') {
            steps {
                script {
                    // Crer un environnement virtuel
                    sh 'python3 -m venv venv'

                    // Activer l'environnement virtuel
                    sh '. venv/bin/activate && pip install --upgrade pip && pip install pytest'

                    // Excuter les tests avec pytest
                    sh '. venv/bin/activate && pytest'

                    // Dsactiver l'environnement virtuel
                    sh 'deactivate'
                }
            }
        }
stage('Build Docker Image') {
            steps {
                script {
                    // Construire l'image Docker
                    sh 'docker build -t $DOCKER_IMAGE .' 
                }
            }
        }
stage('Dployer sur serveur de test') {
            steps {
                script {
                    // Dployer l'application sur un serveur de test
                    sh """
                    ssh $DEPLOY_SERVER "mkdir -p $DEPLOY_PATH"
                    scp ./mon-application $DEPLOY_SERVER:$DEPLOY_PATH
                    ssh $DEPLOY_SERVER "cd $DEPLOY_PATH && docker-compose up -d"
                    """
                }
            }
        }
    }
}
